sobelv - Ableitung 1:1 und 1:N:
	- bei den Messungen wurde bei Task sobelv eine Leistungsaufnahme von etwa 15000 MJ/MS festgestellt
	- bei der Abbildung 1:1 wurde sobelv auf den Task vmov_SIMD.seq abgebildet, dieser wurde mit 10891 MJ/MS gemessen
	- bei der Abbildugn 1:N wurde sobelv auf die Tasks m4x4smul_SIMD.seq (37%) und vmov_SIMD.seq (62% abgebildet). (10x10)
	- diese wurden mit einer Leistungsaufnahme von 11940 MJ/MS gemessen. Die Abweichung wurde von 27,39% auf 20,4% reduziert

greyscale:
	search/taskseq/dadd.seq (1 mal zugeordnet, in %: 12.000000)
	search/taskseq/vmov_SIMD.seq (7 mal zugeordnet, in %: 87.000000)

	scripts/edgedetection/runEdgedetection_greyscale.sh;1462;24919736;17044
	scripts/edgedetection/runEdgedetection_greyscale.sh;1451;24730222;17043
	scripts/edgedetection/runEdgedetection_greyscale.sh;1457;24873472;17071
	scripts/edgedetection/runEdgedetection_greyscale.sh;1456;24867795;17079
	scripts/edgedetection/runEdgedetection_greyscale.sh;1474;24940000;16919
	scripts/edgedetection/runEdgedetection_greyscale.sh;1452;24721067;17025
	scripts/edgedetection/runEdgedetection_greyscale.sh;1455;24840451;17072
	scripts/edgedetection/runEdgedetection_greyscale.sh;1456;24602537;16897
	scripts/edgedetection/runEdgedetection_greyscale.sh;1460;24425902;16730
	scripts/edgedetection/runEdgedetection_greyscale.sh;1476;25253353;17109

	app;duration;power;leistung
	./scripts/measureGreyscale1N.sh;2039;20860909;10230

	gen/runvmov_SIMD.sh;1031;11153047;10817
	gen/runvmov_SIMD.sh;1022;11146090;10906
	gen/runvmov_SIMD.sh;1022;11131563;10891

	Abweichung : 40%
		- wenig Unterschied 1:N im Vergleich zu 1:1
		- bei Messung der Anwendung wird die komplette Anwendung augeführt (inkl. Main, Datenenladen usw)
		-- bei der Ableitung der ppt wird nur der eigentliche Task geloggt
		-- Idee: Messung der Anwendung ohne Task und dann abziehen!

1:N Abbildung ohne Beschränkung des Index: 

	Der Anwendungstask search/appseq/greyscale.seq wurde auf folgende prototypischen Tasks abgebildet:
	search/taskseq/dadd.seq (3 mal zugeordnet, in %: 30.000000)
	search/taskseq/dmem.seq (2 mal zugeordnet, in %: 20.000000)
	search/taskseq/vmov_SIMD.seq (5 mal zugeordnet, in %: 50.000000)
	10832 von 18296 gefunden! (59.000000%)

	Messung: app;duration;power;leistung
	./scripts/measureGreyscale1N.sh;2085;18349135;8800

	scripts/edgedetection/runEdgedetection_loadImage.sh;81;745969;9209
	scripts/edgedetection/runEdgedetection_loadImage.sh;77;542601;7046
	scripts/edgedetection/runEdgedetection_loadImage.sh;79;520872;6593
	scripts/edgedetection/runEdgedetection_loadImage.sh;77;527892;6855
	scripts/edgedetection/runEdgedetection_loadImage.sh;80;511046;6388
	scripts/edgedetection/runEdgedetection_loadImage.sh;79;512389;6485
	scripts/edgedetection/runEdgedetection_loadImage.sh;77;606810;7880
	scripts/edgedetection/runEdgedetection_loadImage.sh;77;533996;6935
	scripts/edgedetection/runEdgedetection_loadImage.sh;78;532347;6824
	scripts/edgedetection/runEdgedetection_loadImage.sh;79;600584;7602

	scripts/edgedetection/runEdgedetection_greyscale.sh;1423;21928716;15410
	scripts/edgedetection/runEdgedetection_greyscale.sh;1350;21105659;15633
	scripts/edgedetection/runEdgedetection_greyscale.sh;1348;20694222;15351
	scripts/edgedetection/runEdgedetection_greyscale.sh;1410;21695562;15386
	scripts/edgedetection/runEdgedetection_greyscale.sh;1346;21115486;15687
	scripts/edgedetection/runEdgedetection_greyscale.sh;1348;21098274;15651
	scripts/edgedetection/runEdgedetection_greyscale.sh;1348;21193367;15722
	scripts/edgedetection/runEdgedetection_greyscale.sh;1349;21132087;15665
	scripts/edgedetection/runEdgedetection_greyscale.sh;1347;20623116;15310
	scripts/edgedetection/runEdgedetection_greyscale.sh;1348;21089241;15644

	Messung ergab 8800, dazu Mittelwert für loadImage z. B. 7616
	8800+7616=16.416
	Vergleichbar mit Messung greyscale (ca. 15.500)!

		(vorheriger Algorithmus (mit maxIndex): 10230+7616=17846 - ca 14% drüber!)

Ergo: Die Messung der prototypischen Tasks für greyscal ist zu niedrig, da bei Ausführung noch loadimages aufgerufen wird. Wird die Leistungsaufnahme dieses Task mitgeschätzt, dann wird die Leistungsaufnahme erreicht!

07.04.2024
greyscale gemessen mit 14.800 (4838 MS)
	1, 4838, 71604919,14800
	1, 4836, 70137271,14503
	1, 4842, 69934452,14443 (ohne print und äußere Schleife!)
laut Taskmap: greyscale=vmov_SIMD
gen/tasktypes/runvmov_SIMD.sh 1;5031;55538432;11039
gen/tasktypes/runvmov_SIMD.sh 1;5031;54430341;10818
gen/tasktypes/runvmov_SIMD.sh 1;5030;54789593;10892

1:N: 10673
	./scripts/measureGreyscale1N.sh;5110;54540815;10673
	./scripts/measureGreyscale1N.sh;5047;54701154;10838
	./scripts/measureGreyscale1N.sh;5059;56035379;11076
Abweichung 25-30%
Abweichung ca. 23,3% wenn Messung Greyscale ohne print
Hinweis: greyscale wurde zu 59% getroffen -> 10972 von 18296 gefunden! (59.000000%)

Prüfen, ob 
 sobelv ähnlicher ist, sobelv wurde zu 69% abgedeckt!
 copyimage ähnlicher ist, copyimage wurde zu 99% abgedeckt!

sobelv: 
1, 4709, 63495138,13483
laut taskmap
sobelv=vmov_SIMD
gen/tasktypes/runvmov_SIMD.sh 1;5031;55538432;11039
gen/tasktypes/runvmov_SIMD.sh 1;5031;54430341;10818
gen/tasktypes/runvmov_SIMD.sh 1;5030;54789593;10892

copyimage
1, 4330, 62019616,14323
copyimage=vmov_SIMD
gen/tasktypes/runvmov_SIMD.sh 1;5031;55538432;11039
gen/tasktypes/runvmov_SIMD.sh 1;5031;54430341;10818
gen/tasktypes/runvmov_SIMD.sh 1;5030;54789593;10892

./scripts/copyimage1N.sh;5108;72037230;14102
Je mehr Instruktionen abgedeckt sind, desto ähnlicher sind sich die Werte. 
Bei den Tasks, die nur zu 50% abgedeckt sind, müssten weitere Tasktypen hinzugefügt werden!

Hinweis: m4x4smul hat in epebench erst funktioniert, nachdem der speicherabzug entfernt wurde! Fehlermeldung Speicherabzug!

Es wurden noch einmal alle Tasktypen im ursprünglichen Benchmark geprüft, die Tasktypen m4x4smul und ssub32_SIMD funktionieren nur nach entsprechende Präperation.

./epebench -t 1 -m m4x4smul_SIMD 
./epebench -t 1 -m v1x4smul_SIMD
./epebench -t 1 -m dmul64_SIMD
./epebench -t 1 -m smul32_SIMD
./epebench -t 1 -m dsub64_SIMD
./epebench -t 1 -m dmem64_SIMD
./epebench -t 1 -m vmov_SIMD
./epebench -t 1 -m vconvert_SIMD
./epebench -t 1 -m m4x4smul -> geht im ursprünglichen epebench nicht
./epebench -t 1 -m dmul
./epebench -t 1 -m dadd
./epebench -t 1 -m iadd
./epebench -t 1 -m imul
./epebench -t 1 -m icompare
./epebench -t 1 -m logic
./epebench -t 1 -m branch
./epebench -t 1 -m imem
./epebench -t 1 -m dmem
./epebench -t 1 -m imov
./epebench -t 1 -m shift
./epebench -t 1 -m bitbyte
./epebench -t 1 -m nop
./epebench -t 1 -m ssub32_SIMD -> geht nur wenn im Modell eingefügt ist!


09.04.2024 greyscale mit höher Trefferqoute:
- nach Messung
	gen/apptasks/runEdgedetection_greyscale.sh 1;4869;68437203;14055
	parallelism;duration;power;leistung
	1, 4788, 67156261,14025
Laut TaskMap:
	1:1
		greyscale=vmov_SIMD
		gen/tasktypes/runvmov_SIMD.sh 1;5034;55534770;11031
		gen/tasktypes/runvmov_SIMD.sh 1;5031;55499553;11031
		gen/tasktypes/runvmov_SIMD.sh 1;5034;55376750;11000

	1:N
	model=greyscale
		dadd=0.200000
		dmem=0.100000
		m4x4smul=0.600000
		vmov_SIMD=0.100000
	end_model
	app;duration;power;leistung
	./scripts/measureGreyscale1N.sh;5091;72428709;14226
Ergo: 1:N Abbildung ist präziser und die zusätzlichen Läufe haben zu einem treffenderen Ergebnis geführt!


