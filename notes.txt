
## Aufruf GDB mit epebench
## Muss im Debug Ordner aufgerufen werden!
gdb --args epebench -m dadd -t 1 -a 1 -n 1

Befehle in "leerem" Ubunto:
sudo apt install git
sudo apt update 
-- bei alter Version von ubunto: sudo sed -i -re 's/([a-z]{2}\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
# Bei Ubuntu 19.04 ist GCC 8.3.0 verfügbar, in dieser Version funktioniert auch epEBench aus dem Debug-Ordner.

sudo:
	sudo usermod -aG sudo allan
	https://www.liquidweb.com/kb/add-user-grant-root-privileges-ubuntu-18-04/
	https://www.digitalocean.com/community/tutorials/how-to-edit-the-sudoers-file-de
	visudio
	

cmake und make:
- das mit clion erstellte Projekt hat eine CMakeLists.txt, welches als Buildfile für cmake verwendet wird. Dort wurde die cmake-Version 3.22.1 eingetragen
- das Projekt wird mit cmake build gebaut
-sudo apt-get install cmake
- cp CMakeLists.txt
- cmake build
- make auszuführen
- apptasks mit cmake/Debug bauen
cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Debug 
-- ci.py nicht vergessen
 cmake -DCMAKE_BUILD_TYPE=DEBUG build


edgedetection:
./getfiles.sh aufrufen
python3 prepare_images.py aufrufen
./run.sh aufrufen

gdb mit edgedetection aufrufen:
gdb --args edgedetection imgfilenames

gcc -g edgedetection.c -o edgedetection edgedetection.o img.o -lm

damit Edgedetection (apptasks) in clion aufgerufen werden kann, in cmakelist einfügen (Abhängigkeit zu mathcalls.h)
target_link_libraries(apptasks PRIVATE m)

Damit edgedetection (nicht apptasks) in clion aufgerufen werden kann, ist als Runconfiguration eine native Anwendung zu erstellen
(https://www.jetbrains.com/help/clion/makefiles-support.html#rd-configs)

Sequenzerstellung über apptasks:
- greyscale hat eine loop, shaprencontrast ebenfalls - Vermutung - Schreibproblem in Datei?

sudo passwort aktuell in config.sh im userordner hinterlegt. Die Datei muss dann aber auch eingebunden werden!

perf:
mit perf können ebenfalls die Leistungsaufnahme auswertet werden. Analog zu powertop gibt es jedoch erhebliche Schwankungen.

perf stat -e power/energy-cores/ ./runbitbyte.sh 

 Performance counter stats for 'system wide':
12,30 Joules power/energy-cores/  
13,79 Joules power/energy-cores/                                                   
15,71 Joules power/energy-cores/                                                   
16,13 Joules power/energy-cores/  
18,90 Joules power/energy-cores/



Wenn die Messungen im Recoverymodus ausgeführt werden, dann sind die Messungen einigermaßen konstant. Die Schwankungen kommen also von der Systemlast, u. A. der Ubuntu-Oberfläche.
Die Tasks der Anwendungen sind häufig unter 1sek, weshalb erhebliche Unterschiede im Vergleich zu den prot Tasks festzustellen sind. 
Die Anwendung wurde nun so geändert, dass mehrere Bilder berechnet werden, damit Ausführungszeiten von >1000MS erreicht werden.
Es gibt beim Vergleich der Messungen anw-task zu prottyptask durchaus Abweichungen (etwa im 30% Bereich). Es wird daher geprüft, ob ein Mix (also unterschiedliche Modelle) dem gewünschten Ergebnis bzw. der Präzision näher kommt.

Der Task nop enthält 1999 Einträge
Der Task vconvert_SIMD enthält 2090 Einträge
Der Task imov enthält 1996 Einträge
Der Task imem enthält 2080 Einträge
Der Task icompare enthält 2095 Einträge
Der Task branch enthält 1997 Einträge
Der Task bitbyte enthält 2037 Einträge
Der Task v1x4smul_SIMD enthält 2287 Einträge
Der Task dmem enthält 2091 Einträge
Der Task dsub64_SIMD enthält 2114 Einträge
Der Task dadd enthält 2062 Einträge
Der Task m4x4smul_SIMD enthält 2328 Einträge
Der Task dmul64_SIMD enthält 2114 Einträge
Der Task dmul enthält 2062 Einträge
Der Task m4x4smul enthält 3199 Einträge
Der Task iadd enthält 2039 Einträge
Der Task logic enthält 2036 Einträge
Der Task imul enthält 2071 Einträge
Der Task dmem64_SIMD enthält 2081 Einträge
Der Task ssub32_SIMD enthält 2114 Einträge
Der Task vmov_SIMD enthält 2157 Einträge
Der Task smul32_SIMD enthält 2114 Einträge
Der Task shift enthält 1996 Einträge

Der Task sobelv enthält 17432 Einträge
Der Task checkcontrast enthält 1922 Einträge
Der Task copyimage enthält 3590 Einträge
Der Task testWithNopBitByteShiftIMulLogic enthält 10139 Einträge
Der Task testWithNopAndBitByteAndShift enthält 6032 Einträge
Der Task testWithNopAndBitByte enthält 4036 Einträge
Der Task combineimgs enthält 8295 Einträge
Der Task sharpencontrast enthält 17599 Einträge
Der Task loadimage enthält 4951 Einträge
Der Task sobelh enthält 17432 Einträge
Der Task writeimage enthält 5340 Einträge
Der Task greyscale enthält 18296 Einträge
Der Task testWithNop enthält 1999 Einträge





