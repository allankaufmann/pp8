
## Aufruf GDB mit epebench
## Muss im Debug Ordner aufgerufen werden!
gdb --args epebench -m dadd -t 1 -a 1 -n 1

Befehle in "leerem" Ubunto:
sudo apt install git
sudo apt update 
-- bei alter Version von ubunto: sudo sed -i -re 's/([a-z]{2}\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
# Bei Ubuntu 19.04 ist GCC 8.3.0 verfügbar, in dieser Version funktioniert auch epEBench aus dem Debug-Ordner.

cmake und make:
- das mit clion erstellte Projekt hat eine CMakeLists.txt, welches als Buildfile für cmake verwendet wird. Dort wurde die cmake-Version 3.22.1 eingetragen
- das Projekt wird mit cmake build gebaut
-sudo apt-get install cmake
- cp CMakeLists.txt
- cmake build
- make auszuführen
- apptasks mit cmake/Debug bauen
cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Debug 
-- ci.py nicht vergessen

edgedetection:
./getfiles.sh aufrufen
python3 prepare_images.py aufrufen
./run.sh aufrufen

gdb mit edgedetection aufrufen:
gdb --args edgedetection imgfilenames

gcc -g edgedetection.c -o edgedetection edgedetection.o img.o -lm

damit Edgedetection (apptasks) in clion aufgerufen werden kann, in cmakelist einfügen (Abhängigkeit zu mathcalls.h)
target_link_libraries(apptasks PRIVATE m)

Damit edgedetection (nicht apptasks) in clion aufgerufen werden kann, ist als Runconfiguration eine native Anwendung zu erstellen
(https://www.jetbrains.com/help/clion/makefiles-support.html#rd-configs)

Sequenzerstellung über apptasks:
- greyscale hat eine loop, shaprencontrast ebenfalls - Vermutung - Schreibproblem in Datei?

sudo passwort aktuell in config.sh im userordner hinterlegt. Die Datei muss dann aber auch eingebunden werden!

perf:
mit perf können ebenfalls die Leistungsaufnahme auswertet werden. Analog zu powertop gibt es jedoch erhebliche Schwankungen.

perf stat -e power/energy-cores/ ./runbitbyte.sh 

 Performance counter stats for 'system wide':
12,30 Joules power/energy-cores/  
13,79 Joules power/energy-cores/                                                   
15,71 Joules power/energy-cores/                                                   
16,13 Joules power/energy-cores/  
18,90 Joules power/energy-cores/



Wenn die Messungen im Recoverymodus ausgeführt werden, dann sind die Messungen einigermaßen konstant. Die Schwankungen kommen also von der Systemlast, u. A. der Ubuntu-Oberfläche.
Die Tasks der Anwendungen sind häufig unter 1sek, weshalb erhebliche Unterschiede im Vergleich zu den prot Tasks festzustellen sind. 
Die Anwendung wurde nun so geändert, dass mehrere Bilder berechnet werden, damit Ausführungszeiten von >1000MS erreicht werden.
Es gibt beim Vergleich der Messungen anw-task zu prottyptask durchaus Abweichungen (etwa im 30% Bereich). Es wird daher geprüft, ob ein Mix (also unterschiedliche Modelle) dem gewünschten Ergebnis bzw. der Präzision näher kommt.







